<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aspnet,aspnetcore,antiforgery,csrf,dotnet,testing,xsrf on Martin Costello's Blog</title><link>https://blog.martincostello.com/tags/aspnetaspnetcoreantiforgerycsrfdotnettestingxsrf/</link><description>Recent content in Aspnet,aspnetcore,antiforgery,csrf,dotnet,testing,xsrf on Martin Costello's Blog</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Tue, 16 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.martincostello.com/tags/aspnetaspnetcoreantiforgerycsrfdotnettestingxsrf/feed.xml" rel="self" type="application/rss+xml"/><item><title>Integration Testing ASP.NET Core Resources Protected with Antiforgery Using Application Parts</title><link>https://blog.martincostello.com/integration-testing-asp.net-core-resources-protected-with-antiforgery-using-application-parts/</link><pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate><guid>https://blog.martincostello.com/integration-testing-asp.net-core-resources-protected-with-antiforgery-using-application-parts/</guid><description>&lt;p>To protect your POST resources in an ASP.NET Core application from &lt;a href="https://docs.microsoft.com/en-us/aspnet/core/security/anti-request-forgery" title="Prevent Cross-Site Request Forgery (XSRF/CSRF) attacks in ASP.NET Core">Cross-Site Request Forgery&lt;/a> (CSRF) an application developer would typically use the &lt;a href="https://docs.microsoft.com/en-us/aspnet/core/security/anti-request-forgery#aspnet-core-antiforgery-configuration" title="ASP.NET Core antiforgery configuration">antiforgery&lt;/a> features to require an antiforgery token and cookie are included in HTTP POST form requests.&lt;/p>
&lt;p>A necessary downside of these protections is that they make it harder to integration test such resources, particularly in a headless manner. This is because the tests need to acquire the antiforgery token and cookie to be able to successfully pass the antiforgery protections on a resource that needs to be tested.&lt;/p></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dotnet,preview,upgrade,automation,github,actions on Martin Costello's Blog</title><link>https://blog.martincostello.com/tags/dotnetpreviewupgradeautomationgithubactions/</link><description>Recent content in Dotnet,preview,upgrade,automation,github,actions on Martin Costello's Blog</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Tue, 11 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.martincostello.com/tags/dotnetpreviewupgradeautomationgithubactions/feed.xml" rel="self" type="application/rss+xml"/><item><title>Upgrading to .NET 8: Part 2 - Automation is our Friend</title><link>https://blog.martincostello.com/upgrading-to-.net-8-part-2-automation-is-our-friend/</link><pubDate>Tue, 11 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.martincostello.com/upgrading-to-.net-8-part-2-automation-is-our-friend/</guid><description>&lt;p>In &lt;a href="https://blog.martincostello.com/upgrading-to-dotnet-8-part-1-why-upgrade" title="Why Upgrade?">part 1 of this series&lt;/a> I recommended that you prepare to upgrade to .NET 8 and suggested
that you start off by testing the preview releases. Testing the preview releases is a great
way to get a head start on the upgrade process and to identify any issues sooner rather than
later, but it does require an investment of your time from preview to preview each month.&lt;/p>
&lt;p>Even if you don&amp;rsquo;t want to test new functionality, you still need to download the new .NET SDK,
update all the .NET SDK and NuGet package versions in your projects, and then test that everything
still works (that&amp;rsquo;s already automated at least, right?). This can be a time-consuming process over
the course of a new .NET release, and it starts to become harder to scale if you want to test lots
of different codebases with the latest preview of the next .NET release.&lt;/p></description></item></channel></rss>
name: build

on:
  push:
    branches: [ main, deploy ]
    paths-ignore:
      - '**/*.gitattributes'
      - '**/*.gitignore'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FORCE_COLOR: 3
  TERM: xterm

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        filter: 'tree:0'
        show-progress: false

    - name: Set up Ruby
      uses: ruby/setup-ruby@e34163cd15f4bb403dcd72d98e295997e6a55798 # v1.238.0
      with:
        ruby-version: 3.3

    - name: Update file timestamps
      shell: bash
      run: |
        git ls-files | xargs -I{} git log -1 --date=format:%Y%m%d%H%M.%S --format='touch -t %ad "{}"' "{}" | $SHELL

    - name: Build blog
      shell: pwsh
      run: |
        bundler config path vendor/bundle
        bundler install
        ./build.ps1

    - name: Publish blog
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: blog
        path: ./build
        if-no-files-found: error

  lint:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        filter: 'tree:0'
        show-progress: false

    - name: Add actionlint problem matcher
      run: echo "::add-matcher::.github/actionlint-matcher.json"

    - name: Lint workflows
      uses: docker://rhysd/actionlint@sha256:887a259a5a534f3c4f36cb02dca341673c6089431057242cdc931e9f133147e9 # v1.7.7
      with:
        args: -color

    - name: Lint markdown
      uses: DavidAnson/markdownlint-cli2-action@05f32210e84442804257b2a6f20b273450ec8265 # v19.1.0
      with:
        config: '.markdownlint.json'
        globs: |
          **/*.md

    - name: Lint PowerShell in workflows
      uses: martincostello/lint-actions-powershell@5942e3350ee5bd8f8933cec4e1185d13f0ea688f # v1.0.0
      with:
        treat-warnings-as-errors: true

    - name: Lint PowerShell scripts
      shell: pwsh
      run: |
        $settings = @{
          IncludeDefaultRules = $true
          Severity = @("Error", "Warning")
        }
        $issues = Invoke-ScriptAnalyzer -Path ${env:GITHUB_WORKSPACE} -Recurse -ReportSummary -Settings $settings
        foreach ($issue in $issues) {
          $severity = $issue.Severity.ToString()
          $level = $severity.Contains("Error") ? "error" : $severity.Contains("Warning") ? "warning" : "notice"
          Write-Output "::${level} file=$($issue.ScriptName),line=$($issue.Line),title=PSScriptAnalyzer::$($issue.Message)"
        }
        if ($issues.Count -gt 0) {
          exit 1
        }

  deploy:
    if: github.event.repository.fork == false && github.ref_name == 'deploy'
    runs-on: ubuntu-latest
    needs: [ build, lint ]

    environment:
      name: production
      url: https://blog.martincostello.com

    permissions:
      id-token: write

    steps:

    - name: Download blog
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: blog
        path: ./build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
      with:
        role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE }}
        role-session-name: ${{ github.event.repository.name }}-${{ github.run_id }}-deploy
        aws-region: eu-west-2

    - name: Deploy to S3
      run: aws s3 sync ./build/ s3://blog.martincostello.com --cache-control "max-age=604800" --delete

    - name: Create CloudFront invalidation
      shell: pwsh
      env:
        DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
      run: |
        $invalidationId = aws cloudfront create-invalidation --distribution-id ${env:DISTRIBUTION_ID} --paths "/*" --output text --query "Invalidation.Id"
        aws cloudfront wait invalidation-completed --distribution-id ${env:DISTRIBUTION_ID} --id $invalidationId
